#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May 13 14:54:28 2022

@author: Ya-Chen Chuang
"""

## for data
import numpy as np
import pandas as pd
## for plotting
import matplotlib.pyplot as plt
import seaborn as sns
# ## for geospatial
# import folium
# import geopy
## for machine learning
from sklearn import preprocessing, cluster
import scipy
from numpy import array
from scipy.cluster.vq import vq
# ## for deep learning
# import minisom


df = pd.read_excel("/Users/kurtlab/Desktop/Chiari_Morphometric/results/symptoms_morph/ChiariSymptoms_analysis.xlsx", sheet_name='syringomyelia_CM1');

## categorize Syringomyelia
No = df.loc[df["syringomyelia"]=="N", "syringomyelia"]=0
Yes = df.loc[df["syringomyelia"]=="Y", "syringomyelia"]=1
label = df["syringomyelia"]


dtf = df[["syringomyelia","BSv","CBLv","4thV"]].reset_index(drop=True)
dtf = dtf.reset_index().rename(columns={"index":"id"})
dtf.head()

## K-mean clustering
k = 1
model = cluster.KMeans(n_clusters=k, init='k-means++')
Syrinx = dtf[dtf["syringomyelia"]==1][["syringomyelia", "BSv","CBLv","4thV"]].reset_index(drop=True)


## clustering
dtf_syrinx = Syrinx.copy()
dtf_syrinx["cluster"] = model.fit_predict(Syrinx)
SortedClusters = np.sort(model.cluster_centers_, axis=0)

## find real centroids
# closest, distances = scipy.cluster.vq.vq(model.cluster_centers_, 
#                      dtf_syrinx.drop("cluster", axis=1).values)
dtf_syrinx["centroids"] = 0
# for i in closest:
#     dtf_syrinx["centroids"].iloc[i] = 1
    
## add clustering info to the original dataset
dtf[["cluster"]] = dtf_syrinx[["cluster"]]
# dtf[["cluster","centroids"]] = dtf_syrinx[["cluster","centroids"]]
dtf.sample(1)

## plot
fig = plt.figure()
ax = fig.add_subplot(111, projection = '3d')

sns.scatterplot(x="BSv", y="CBLv", z="4thV", data=dtf, 
                palette=sns.color_palette("bright",k),
                hue='cluster', legend="brief", ax=ax).set_title('Clustering (k='+str(k)+')')
th_centroids = model.cluster_centers_
ax.scatter(th_centroids[:,0], th_centroids[:,1], s=50, c='black', 
           marker="x")
